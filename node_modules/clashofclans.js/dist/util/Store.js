"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CacheStore = void 0;
class CacheStore {
    constructor(options) {
        this.store = new Map();
        this.ttl = options?.ttl ?? 0;
        this.sweepInterval = options?.sweepInterval ?? 2 * 60 * 1000;
        if (this.sweepInterval > 0)
            this._sweep(); // sweep expired cache
    }
    _sweep() {
        setInterval(() => {
            for (const cache of this.store.values()) {
                if (cache.expires > 0 && Date.now() > cache.expires) {
                    this.store.delete(cache.key);
                }
            }
        }, Math.max(this.sweepInterval, 30 * 1000));
    }
    set(key, value, ttl = 0) {
        const expires = ttl > 0 ? Date.now() + ttl : this.ttl > 0 ? Date.now() + this.ttl : 0;
        this.store.set(key, { value, expires, key });
        return true;
    }
    get(key) {
        const data = this.store.get(key);
        if (!data)
            return null;
        if (data.expires > 0 && Date.now() > data.expires) {
            this.store.delete(key);
            return null;
        }
        return data.value;
    }
    delete(key) {
        return this.store.delete(key);
    }
    clear() {
        return this.store.clear();
    }
}
exports.CacheStore = CacheStore;
